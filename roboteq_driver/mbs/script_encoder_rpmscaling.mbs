SCRIPT_VER=28
MAX_CHANNELS=2
Dim last_mode[2] as Integer
Dim CPR as Integer
Dim RPM_SCALING as Integer

' Mode values are:
'  -1 stopped
'  0 speed mode
'  1 position mode
' These correspond to the constants in roboteq_msgs/Command. The motor begins in stopped
' mode, the setup for which is run when last_mode[0] != VAR[1].
last_mode[0] = -127
last_mode[1] = -127
setcommand(_VAR, 1, -1)
setcommand(_VAR, 2, -1)

CPR = 512
RPM_SCALING = 2500

' Motor controller configuration. Much of this is particular to Grizzly
' and can be generalized/parameterized as the need arises. Page numbers
' are a reference to this document:
' www.roboteq.com/index.php/docman/motor-controllers-documents-and-files/documentation/user-manual/7-nextgen-controllers-user-manual/file

setconfig(_ECHOF, 1) ' Serial echo off (p195)
setconfig(_RWD, 220) ' Watchdog timeout, milliseconds (p195)
setconfig(_AMOD, 1, 1) ' Analog input 1 absolute mode
setconfig(_AMOD, 2, 1) ' Analog input 2 absolute mode

' Undervoltage/overvoltage limits (p214)
setconfig(_OVL, 700)
setconfig(_UVL, 100)

'Set the encoder up out here... The arguments are not the same for each channel
'This sets the encoder mode to:
'Motor Channel 1 uses encoder channel 1 as feedback
'Motor Channel 2 uses encoder channel 2 as feedback
'Arguements were found by
setconfig(_EMOD, 1, 18)
setconfig(_EMOD, 2, 34)

for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
	' Encoder, speed config (p208, p221) - Encoder is not used for HB/Ant Robots
	' Should they explicitly be set to not use encoder feedback?
        'setconfig(_EMOD, ch, 50)
	setconfig(_EPPR, ch, CPR)

	' Need to configure the Encoders as feedback:
	' This setting is confusing... When setting "Hall Feedback" through the RoboRun utility, ~BLFB returns a 1.  The manual says this should be 0 for hall feedback??
	setconfig(_BLFB, ch, 0)
	' Set the stall detection to 50% at 1000 ms, we had set to 500 ms at 25% (2)
	setconfig(_BLSTD, ch, 2)
	' Set pole count (needed to be negative to get speed feedback sign correct for HB/Ant Golden Motors)
	setconfig(_BPOL, ch, -4)
	' Should the hall counter and actions be explicitly set?

	' Max speed for the motors is ~2800 RPM, so set it to 2500 RPM 100.0% command (1000) will now correspond to 2500 RPM
	setconfig(_MXRPM, ch, RPM_SCALING)
	'setconfig(_MXRPM, ch, 350)
	' Closed-loop Error Detection - This command disables the closed-loop error detection, leave as-is for now
	setconfig(_CLERD, ch, 3)

	' Current limit (p216)
	' Set the amps limit to 10 amps, cannot be set less than 10 Amps
	setconfig(_ALIM, ch, 100)
	' Amps Trigger Action - not sure these parameters make sense to me....., zero should turn it off
	setconfig(_ATGA, ch, 0)
	' Amps trigger delay - set to 50 ms, seems reasonable for now
	setconfig(_ATGD, ch, 50)
	' Amps trigger level is set at zero??
	setconfig(_ATRIG, ch, 0)

	' Max acceleration/deceleration (p219)
	' Accel and decel set to 2000 RPM/sec, probably okay - may want to adjust for current draw
	setconfig(_MAC, ch, 30000)
	setconfig(_MDEC, ch, 30000)
next

top:
	for ch = 1 andwhile ch <= MAX_CHANNELS evaluate ch++
		if last_mode[ch - 1] <> getvalue(_VAR, ch) then
			last_mode[ch - 1] = getvalue(_VAR, ch)

			if getvalue(_VAR, ch) = 0 then
				' Motor in velocity-control mode.
				' Sets motor to speed control mode, I reduced the gains to only Ki = 1
				' Ki could not be set any higher without having issues when stopping
				' Sets integral Cap to 100%
				setconfig(_MMOD, ch, 1)
				setconfig(_KP, ch, 4)
				setconfig(_KI, ch, 4)
				setconfig(_KD, ch, 0)
				setconfig(_ICAP, ch, 100)
			elseif getvalue(_VAR, ch) = 1 then
				' Motor in position-control mode.
				' Don't know if this will work, I'm assuming that HB/Ant will only call for speed control
				setconfig(_MMOD, ch, 3)
				setconfig(_KP, ch, 0)
				setconfig(_KI, ch, 0)
				setconfig(_KD, ch, 0)
				setconfig(_ICAP, ch, 0)
			elseif getvalue(_VAR, ch) = 2 then
				setconfig(_MMOD, ch, 0)
				setconfig(_KP, ch, 0)
				setconfig(_KI, ch, 0)
				setconfig(_KD, ch, 0)
				setconfig(_ICAP, ch, 0)
			else
				' Motor to be stopped (high-Z).
				' Keeps the motor in closed-loop speed, but sets the gains to zero
				' This seems like the right thing to do since the motor "hunts" at zero speed
				' Sets integral cap in PID controller to 0% (i.e., motor is off)
				setconfig(_MMOD, ch, 1)
				setconfig(_KP, ch, 0)
				setconfig(_KI, ch, 0)
				setconfig(_KD, ch, 0)
				setconfig(_ICAP, ch, 0)
				setcommand(_G, ch, 0)			
			end if
			
		end if

		
	next

	' Send feedback for this channel at 25Hz.
	ch = 1
	GoSub PrintFeedback
	ch = 2
	GoSub PrintFeedback
	
	' Send status messages for the controller at 5Hz.
	c++
	if c = 5 then
		GoSub PrintStatus
		c = 0
	end if

	wait(19)
	goto top

PrintFeedback:
	print("&f:", ch)
	print(":", getvalue(_MOTAMPS, ch))
	print(":", getvalue(_MOTCMD, ch))
	print(":", getvalue(_MOTPWR, ch))
	'Original values in Roboteq script read from the encoder
	'Use Encoder feedback
	print(":", getvalue(_ABSPEED, ch))
	'print(":", getvalue(_BLSPEED, ch))
	print(":", getvalue(_ABCNTR, ch))
	'print(":", getvalue(_BLCNTR, ch))
	print(":", getvalue(_VOLTS, 2))
	print(":", getvalue(_BATAMPS, ch))
	print(":", getvalue(_ANAIN, ch))
	print(":", getvalue(_TEMP, ch+1))
	'print(":", getconfig(_EPPR, ch))
	print(":", CPR)
	print(":", RPM_SCALING)
	'print(":512")
	print("\r")
	Return

PrintStatus:
	print("&s:", SCRIPT_VER)
	print(":", getvalue(_FLTFLAG))
	print(":", getvalue(_STFLAG))
	print(":", getvalue(_VOLTS, 1))
	print(":", getvalue(_VOLTS, 3))
	print(":", getvalue(_TEMP, 1))
	print("\r")
	
	Return
